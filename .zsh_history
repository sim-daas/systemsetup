nix-shell -p nixpkgs.neofetch
nano /etc/nix/nix.conf 
sudo nano /etc/nix/nix.conf 
nix-shell -p git
nix-shell -p dmenu
sudo apt remove alacritty
nix-env -iA nixpkgs.alacritty nixpkgs.dmenu
dmenu
nix-env -iA nixpkgs.openssh
sudo systemctl enable openssh
sudo systemctl enable openssh-server
sudo systemctl enable ssh-server
openssh
nix-env -e dmenu alacritty openssh
nix-collect-garbage
sudo apt install openssh
sudo apt install openssh-server
sudo systemctl enable ssh
sudo systemctl start ssh
kitty
freshfetch 
nix-shell -p kitty
nix-shell -p thunar
nix-shell -p neofetch
nix-shell -p freshfetch
alacritty
nix-env -p foot
nix-shell -p foot kitty
ay
nix-shell -p alacritty
nix run --impure github:guibou/nixGL --alacritty
nix run --impure github:guibou/nixGL --program alacritty
nix run --impure github:guibou/nixGL alacritty
mate-wm
sudo apt install i3 i3status dmenu
mate-wm --replace i3
mkdir .config/i3status
cx i3status/
cd i3status/
sudo apt install nitrogen
sudo nano /usr/share/xsessions/i3.desktop
sudo apt install dex
mate-terminal
sudo apt install rofi alacritty
sudo apt install rofi alacritty dmenu

fastfetch --logo Garuda
fastfetch --logo GarudaDragon
fastfetch --logo Garuda_small
fastfetch --logo "bodhi"
fastfetch --logo "void"
fastfetch --logo "puppy"
fastfetch --logo "venom"
fastfetch --logo "venom_small"
fastfetch --logo "vnux"
fastfetch --logo "vzlinux"
fastfetch --logo "zorin"
fastfetch --logo "venom_small" | lolcat
lolcat | fastfetch --logo "venom_small" 
mkdir .config/fastfetch/
nano .config/fastfetch/config
mv .config/fastfetch/config .config/fastfetch/config.conf
fastfetch --os --uptime --packages --cpu --memory --battery --logo "venom_small"
fastfetch -os --uptime --packages --cpu --memory --battery --logo "venom_small"
fastfetch --uptime --packages --cpu --memory --battery --logo "venom_small"
fastfetch -h
fastfetch --config .config/fastfetch/config.conf 
fastfetch --generate-config 
fastfetch --gen-config 
rm .config/fastfetch/config.conf 
fastfetch --logo "venom_small" 
fastfetch --list-logos
fastfetch --logo kali 
fastfetch --logo popos
fastfetch --logo debian
nano .config/fastfetch/config.jsonc 
fastfetch --logo debian_small
fastfetch --logo parrot
fastfetch --logo arch_small
fastfetch --logo kali_small
fastfetch --logo kali
ubuntu@Aspire-i
fastfetch --logo arch
mate-disk-usage-analyzer 
nix-shell -p midori
mate-appearance-properties 
nix-shell -p tgpt xfce.thunar rofi
mate-font-viewer 
nix-env -iA nixpkgs.midori
midori
cd /usr/share/backgrounds/
[200~locale  # check for UTF-8
sudo apt update && sudo apt install locales
sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL="en_US.UTF-8"
sudo export LC_ALL="en_US.UTF-8"
echo "LC_ALL=en_US.UTF-8" | sudo tee -a /etc/environment
echo "en_US.UTF-8 UTF-8" | sudo tee -a /etc/locale.gen
echo "LANG=en_US.UTF-8" | sudo tee -a /etc/locale.conf
sudo locale-gen en_US.UTF-8
sudo apt install apt-transport-https ca-certificates curl software-properties-common
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
apt-cache policy docker-ce
nix-env -iA nixpkgs.distrobox
sudo groupadd docker
sudo usermod -aG docker $USER
sudo apt install docker-ce
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
# Add Docker's official GPG key:
# Add the repository to Apt sources:
echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
apt-key export docker | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-key.gpg
apt-key list docker
cd /etc/apt
sudo cp trusted.gpg trusted.gpg.d
lsb_release -c
sudo nano /etc/apt/sources.list.d/additional-repositories.list
sudo rm /etc/apt/sources.list.d/additional-repositories.list
sudo nano /etc/apt/sources.list.d/docker.list
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$UBUNTU_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run -it ubuntu
docker run -it ubuntu
export LOCALE_ARCHIVE="$(nix-env --installed --no-name --out-path --query glibc-locales)/lib/locale/locale-archive"
docker rm
docker rm hungry_turing practical_leakey
docker rm practical_leakey 
mount --make-rshared 
sudo mount --make-rshared 
mount --help
distrobox create -i ubuntu
distrobox enter ubuntu 
newgrp docker
nix-env -e distrobox
curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sudo sh
docker images rm ubuntu
docker rmi ubuntu
docker ps
docker inspect i3wm
sudo apt install i3 
sudo apt install alacritty
vi /usr/share/xsessions/i3dbox.desktop
sudo apt install vi
nano /usr/share/xsessions/i3dbox.desktop
sudo nano /usr/share/xsessions/i3dbox.desktop
sudo cp /usr/share/xsessions/i3dbox.desktop .
distrbox rm ubuntu
distrobox rm ubuntu
distrobox rm -f ubuntu
cat /usr/share/xsessions/i3.desktop 
which bash
sudo chmod +x /usr/bin/i3dbox
sudo nano /usr/bin/i3dbox
nano i3dbox.desktop 
sudo nano i3dbox.desktop 
sudo cp i3dbox.desktop /usr/share/xsessions/.
sudo nano /usr/share/xsessions/i3dbox.desktop 
sudo apt install xterm xinit
i3
mate-session-inhibit 
mate-session-inhibit logout
sudo mate-session-inhibit logout
sudo apt install icewm
cp /usr/share/xsessions/icewm-session.desktop ~/
cat icewm-session.desktop 
sudo chmod +x /usr/bin/icewm
nano icewm-session.desktop 
sudo cp ~/icewm-session.desktop /usr/share/xsessions/icewm-session.desktop
sudo nano /usr/bin/icewm
/usr/bin/distrobox-enter -T -n i3wm -- "icewm-session"
which distrobox
sudo apt install brave
cat .config/i3/config 
nano .config/i3status/config 
cat .config/i3status/config 
cat .config/i3status/config | tgpt "make my i3statusbar darker with less colours and no icons"
nano .config/i3status/confige
mv .config/i3status/config .config/i3status/config.bak
mv .config/i3status/confige .config/i3status/config
nano .config/i3status/config.bak 
mv .config/i3status/config .config/i3status/config.rm
mv .config/i3status/config.bak .config/i3status/config
sudo apt install polybar
mkdir -p $HOME/.config/polybar/
cp /etc/polybar/config.ini .config/polybar/.
nano $HOME/.config/polybar/config.ini 
nano $HOME/.config/polybar/launch.sh
cgmod +x $HOME/.config/polybar/launch.sh
chmod +x $HOME/.config/polybar/launch.sh
./$HOME/.config/polybar/launch.sh
.$HOME/.config/polybar/launch.sh
sh $HOME/.config/polybar/launch.sh
nano .config/polybar/config.ini 
ls .config/
fastfetch
mkdir .config/alacritty
nano .config/i3status/config
mate-volume-control
sudo nano /usr/bin/icewm 
nm-applet 
pactl
nano alacritty/a
which picom.conf
where picom.conf
cd picom/
cd o3
rm -r picom/
nano config 
sudo apt install picom
cd .c
mkdir picom
cd picom
nano i3/config 
nano picom/picom.conf 
sudo apt remove picom
sudo apt install brightnessctl
nano .config/i3/config 
tgpt -i
brightnessctl 
brightnessctl  &
brightnessctl  -h
brightnessctl  s 25%
sudo brightnessctl  s 25%
sudo brightnessctl  s 40%
nano .config/i3/config
brightnessctl s 5%-
sudo apt install fastfetch
fastfetch --logo opensuse_tumbleweed -
cd .config/polybar/
nano config.ini 
cd .config/
nano i3/config
nano polybar/config.ini 
sudo apt install tmux
sudo apt install nani
sudo apt install nala
nix-env -e fastfetch
nala install fastfetch
sudo nala install lf
lf
sudo nala remove lf
nano alacritty/alacritty.toml 
sudo apt install nala 
sudo nala install polybar rofi nitrogen
docker container commit -p i3wm ubuntu-dbox
nano /usr/share/xsessions/i3dbox.desktop 
cd .config/tmux
mkdir .config/tmux
nano .config/tmux/tmux.conf
cat .config/alacritty/alacritty.toml 
tmux-select 
unset tmux
nala install fzf
find
rg
sudo nala install rg
sudo rg --files --hidden --glob '!*' | fzf
sudo find / \( -type f -name ".*" \) -o \( -type f ! -name ".*" \) | fzf
find . -type f -name ".*" -o -type f | fzf
find . -type d | fzf
unset tmux force
top
sudo nala install htop
htop
rnager
ranger 
nix-env -e ranger
cat /tmp/Alacritty-47661.log 
ollama run phi2
ollama-serve
nix-shell -p ollama
sudo nala install picom
sudo nala install libconfig-dev libdbus-1-dev libegl-dev libev-dev libgl-dev libepoxy-dev libpcre2-dev libpixman-1-dev libx11-xcb-dev libxcb1-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev meson ninja-build uthash-dev
nano picom.conf 
picom
nano alacritty.toml 
nix-env -p ranger
nix-shell -p ranger
nix-prefetch-url 
nano shell.nix
nix-shell
sudo dpkg-reconfigure locales
echo tmux
echo $TMUX
nano .bashrc 
unset TMUX
distrobox list
distrobox rm i3wm
distrobox create -i ubuntu:24.04 --name i3wm 
rm clear 
nano tmux.conf 
which $zsh
zsh
sudo apt install zsh
which zsh
which $SHELL
chsh
ls --colors
tmux-select
fxf
fzf /home -d
cat .bashrc
find /home /home/ubuntu /usr/bin /usr/share /usr/local/bin -type d | fzf
find /home /home/ubuntu -type d | fzf
fzf --zsh
fzf -zsh
sudo nala remove fzf
sudo nala install fzf
sudo nala install zoxide
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
z Pictures
z
cd Pictures
nano .p10k.zsh
cd picrure 
cd pictre
cd piture
nan
tmux select-pane -t :. 
tmux la
tmux lw
tmux ls
nano .bashrc
tmux kill-server
nix-shell -p tgpt
nix-env -e midori glibc-locales
nix-c
ccd
sudo nala remove ranger
nix-env -iA nixpkgs.fzf nixpkgs.ranger
sudo nala install tightvnc-standalone-server
sudo nala install tigervnc-standalone-server
mkdir .vnc
vncserver
xtigervncviewer -SecurityTypes VncAuth -passwd /tmp/tigervnc.xMoiCW/passwd :1
chmod +x .vnc/xstartup
nano .vnc/xstartup
vncserver :1 -geometry 1920x1080\

xtigervncviewer -SecurityTypes VncAuth -passwd /tmp/tigervnc.An5bMZ/passwd :1
sudo nala remove tigervnc-viewer
vncserver :1 -geometry 800x600
sudo nala install ranger
sudo nala install fastfetch
nix-shell -p fastfetch lolcat
vncserver :1 -geometry 800x570 &
nix-shell -p fastfetch
nix-shell -p fastfetch --run fastfetch --logo opensuse_tumbleweed
nix-shell -p fastfetch --run 'fastfetch --logo opensuse_tumbleweed'
cd Pictures/Wallpapers
cd picture
cd pictur wallp
cd walp
cd wall
cd pictr
cd .config/i3/
nano confifzf_cd :. 
sudo nala install brave
nix-env -p brave
nix-shell -p brave
nix-shell -p fastfetch 
cd .config/alacritty
xprop
vncserver -kill :1
cd ala
nano alacritty.toml
cd .config/caja/scripts
cd wal
cdfzf_cd :. 
cd them
neofetch
sudo nala remove neofetch 
curl https://zed.dev/install.sh 
distrobox enter i3wm
cd pic
curl https://zed.dev/install.sh | sh
~/.local/bin/zed .
cd .local/bin/zed
cd .local/bin/
rm zed
~/.local/bin/zed
docker container commit -p i3wm ubuntu-minimal
sudo nala install nvim
sudo nala install neovim
git clone -b v2.0 https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 
sudo nala install cc
sudo nala install clang
sudo nala install gcc
sudo nala install npm
sudo nala install rigrep
sudo nala install ripgrep
sudo nala install python3.12-venv
rm demo.py.swp
distrobox stop i3wm 
sudo nala remove npm
sudo nala install make
sudo nala install pip3
nvim .config/nvim/init.lua
nix-env -iA  nixpkgs.tgpt
cat .zsh_history | tgpt -i
cat .zsh_history | tgpt -h 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
cat .zsh_history | tgpt --max_length 10000 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
cat .zsh_history | tgpt --provider opengpts 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
cat .zsh_history | tgpt 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
ollama
sudo nvidia-settings
ollama ls
ollama run phi3:mini
cat .zsh_history | ollama run phi3:mini 
ollama run phi3:mini '$(cat .zsh_history)'
ollama run phi3:mini 'prepare a bashrc based upon this history file of my setup and remove any nano edit commands and the duplicate ones , so that i can rebuild my system anywhere - $(cat .zsh_history)'
ollama run phi3:mini 'prepare a zsh script based upon this history file of my setup and remove any nano edit commands and the duplicate ones , so that i can rebuild my system anywhere - $(cat .zsh_history)'
ollama run phi3:mini 'write a zsh script based upon this history file of my setup and remove any nano edit commands and the duplicate ones , so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'write a zsh script , so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'give me a list of zsh commands so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'give me a list of installed packages using the different package managers so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'give me a list of installed packages using the different package managers so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat ~/.zsh_history)'
ollama run phi3:mini "Summarize this file: $(cat .zsh_history)"\

ollama run phi3:mini "prepare a zshrc file based on my system history to help reproduce this setup on any new system: $(cat .zsh_history)"\

cp .zsh_history zshh
sudo nala install vim
vim zshh
ollama run phi3:mini "prepare a zshrc file based on my system history to help reproduce this setup on any new system: $(cat zshh)"\

rm zshh
vim .zsh_history 
cat .zsh_history 
sudo nala install i3 polybar nitrogen rofi alacritty picom nvim tmux fzf ranger zoxide zsh git python3.12-venv make gcc\

sudo nala install i3 polybar nitrogen rofi alacritty picom neovim tmux fzf ranger zoxide zsh git python3.12-venv make gcc\

nano .zshrc
distrobox rm -f i3wm
distrobox create -i ubuntu-dbox --name i3wm 
sudo nala install i3 polybar nitrogen rofi alacritty picom neovim tmux fzf ranger zoxide git python3.12-venv make gcc\

sudo sh <(curl -L https://nixos.org/nix/install) --daemon
distrobox enter i3wm 
distrobox create -i ubuntu-dbox --name nixi3
nvim /usr/bin/i3dbox 
nano /usr/bin/i3dbox 
sudo nano /usr/bin/i3dbox 
cp /usr/bin/i3dbox /usr/bin/nixi3
sudo cp /usr/bin/i3dbox /usr/bin/nixi3
sudo nano /usr/bin/nixi3
sudo cp /usr/share/xsessions/i3dbox.desktop /usr/share/xsessions/i3nix.desktop
cat /usr/share/xsessions/
ls /usr/share/xsessions/
sudo mv /usr/share/xsessions/i3nix.desktop /usr/share/xsessions/nixi3.desktop
sudo nano /usr/share/xsessions/i3nix.desktop
sudo nano /usr/share/xsessions/nixi3.desktop
distrobox-enter nixi
distrobox-enter nixi3
nix-env -iA  nixpkgs.fastfetch
tmux-select-session :. 
cd xsess
sudo nala remove fzf ranger
nix-env -iA  nixpkgs.ranger
nix-env -iA  nixpkgs.nvim
nvim shell.nix
cd .config/polybar
cat config.ini
cat launch.sh
vncserver :1 -geometry 800x570
nix-daemon
distrobox create -i ubuntu-dbox --name isaac-sim
distrobox-enter isaac-sim
distrobox-enter i3wm
sudo nala install i3 polybar nitrogen rofi alacritty picom neovim tmux fzf ranger zoxide git python3.12-venv firefox
firefox
sh <(curl -L https://nixos.org/nix/install) --daemon
nix-env -iA  nixpkgs.xfce.thunar
nix-env -iA  nixpkgs.nvtop
chmod 4755 /nix/store/xvwazg6vr8h5gyp7qny1ab7w1vbfl23p-brave-1.67.134/opt/brave.com/brave/chrome-sandbox
sudo chmod 4755 /nix/store/xvwazg6vr8h5gyp7qny1ab7w1vbfl23p-brave-1.67.134/opt/brave.com/brave/chrome-sandbox
brave
chmod +x Desktop/omniverse-launcher-linux.AppImage
nix-env -iA  nixpkgs.fuse
sudo nala install libfuse2
sudo nala install fuse
nix-env -e  nixpkgs.fuse
nix-env -e  fuse
sudo nala install libnss3
chmod 4755 /tmp/.mount_omniveSIgB8l/chrome-sandbox
chmod 4755 /tmp/.mount_omniveSIgB8l
chmod 4755 omniverse-launcher-linux.AppImage
chmod 4755 /tmp
sudo chmod 4755 /tmp
sudo chmod +rwx /tmp
sudo ./omniverse-launcher-linux.AppImage
chmod 775 /tmp
sudo chmod 775 /tmp
./omniverse-launcher-linux.AppImage
./omniverse-launcher-linux.AppImage -h
ls /tmp
./omniverse-launcher-linux.AppImage --allow-root
nix
distrobox-rm nixi3 i3wm isaac-sim
nix-env -iA  nixpkgs.brave
cd desk
./omniverse-launcher-linux.AppImage --appimage-extract
cd squashfs-root
chmod +x AppRun
./Apprun
Apprun
sudo mv squashfs-root /opt/omniverse-launcher
sudo mv /opt/omniverse-launcher/omniverse-launcher.desktop /usr/share/applications/.
nvim /usr/share/applications/omniverse-launcher.desktop
ls /opt/omniverse-launcher
cat /opt/omniverse-launcher/omniverse-launcher.desktop
cat /usr/share/applications/omniverse-launcher.desktop
/opt/omniverse-launcher/AppRun --no-sandbox %U
cat /opt/omniverse-launcher/AppRun
nvim /opt/omniverse-launcher/AppRun
sudo nala install gnome-terminal
gnome
gnome-calculator
sudo swapon --show
sudo fallocate -l 8G /swapfile
nix-env -iA  nixpkgs.btop
nix-env -iA  nixpkgs.nvtopPackages.panthor
nvidia-smi
sudo update-alternatives --config alacritty
sudo update-alternatives --config x-terminal-emulator
timeshift
mkdir .config/nixpkgs/
nvim ~/.config/nixpkgs/config.nix
nix-env -iA  nixpkgs.obsidian
nix-env -e  nixpkgs.nvtopPackages.panthor
nix-env -e  nixpkgs.nvtopPackages.nvidia
nix-env -iA  nixpkgs.nvtopPackages.nvidia
obsidian
chmod 4755 /nix/store/6y4i5bb33xqlk7lpwjjydk7b0dmilxca-electron-30.1.1/libexec/electron/chrome-sandbox 
sudo chmod 4755 /nix/store/6y4i5bb33xqlk7lpwjjydk7b0dmilxca-electron-30.1.1/libexec/electron/chrome-sandbox 
nvtop
nix-env -iA  nixpkgs.polybar
nix-env -e  nvtop
which polybar
nix profile
nix profile install nixpkgs#tmux
which tmux
nix profile remove nixpkgs#tmux
nix profile remove tmux
cat /home/ubuntu/.local/state/nix/profiles/profile
nvim .config/nix/nix.conf
sudo systemctl restart nix-daemon.service
sudo systemctl restart nix-daemon.socket
which picom
nix-env -iA  nixpkgs.picom
nix-env -iA  nixpkgs.fzf
nix-env --switch-generation
nix-env --help
nix-env --l
nix profile list
mv /home/ubuntu/.local/state/nix/profiles/profile Downloads
rm Downloads/*
nix-env --rollback
nix-env -iA  nixpkgs.fzf nixpkgs.brave nixpkgs.ranger nixpkgs.obsidian 
nix-env -iA  nixpkgs.btop nixpkgs.neovim nixpkgs.fastfetch nixpkgs.tgpt nixpkgs.distrobox
nix-env -iA  nixpkgs.docker_27
which docker
locale
nix-shell -p btop
nix-shell -p glibcLocales
nix-env --list-generations
nix-env -iA  nixpkgs.i3 nixpkgs.tmux nixpkgs.picom nixpkgs.polybar nixpkgs.nitrogen nixpkgs.rofi nixpkgs.git nixpkgs.zoxide nixpkgs.ripgrep nixpkgs.gnome.gnome-terminal
rofi
gnome-terminal
alacritty 
nix-env -e rofi gnome-terminal
which zed
ls /usr/sbin
rm /usr/sbin/zed
sudo rm /usr/sbin/zed
nvim .zsh_history
mkdir githubrepos
cd repo
git
rm systemsetup
rm -r systemsetup
git config --global credential.helper local
mkdir systemsetup
cd systemsetup
echo "# systemsetup" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/systemsetup.git\

git config --global user.email "aitechmanml@gmail.com"
git config --global init.defaultBranch main
rm README.md
git push origin main
echo "# systemsetup" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/systemsetup.git\
git push -u origin main
chmod +x push.sh
git config --global credential.helper store\

nvim push.sh
nix-env -e git
sudo nala install git
cd system
cd .git-credentials
cd syst
nix-env -e distrobox docker
docker run -it --rm brandoncc/vim-be-good:stable
cat .git-credentials
cp .git-credentials .gitpass
du -s githubrepos/systemsetup
du -s .config
du -sh .config
du -ah .config | sort -rh \

du -ah .config | sort -rh | head -n 20
mkdir .config
mkdir .config/i3
ln -s ~/.config/i3 githubrepos/systemsetup/.config/i3
ln -s ~/.config/i3 ~/githubrepos/systemsetup/.config/i3
ls .config/i3
cd .config/i3
cat i3
rm -r i3
ln -s ~/.config/i3 ~/githubrepos/systemsetup/.config/
ls i3
nvim .config/i3/config
git add ~/.config/i3
git add .config/i3
touch .gitignore
ls -l ~/.config/i3\

rm .config/i3
chmod +x copy.sh
rm -r .config/omniverse-launcher
cd .config
du -ah .config | sort -rh | head -n 50
du -ah . | sort -rh | head -n 50
nvim copy.sh
rm -r .config/obsidian
nix-env -e polybar
nvim config.jsonc
ls .config/fastfetch
nvim .config/fastfetch/config.jsonc
mv config.jsonc githubrepos
rm githubrepos/config.jsonc
mkdir cs50
touch requirements.txt
git branch -m main
git remote add origin https://github.com/sim-daas/cs50.git\
git push -u origin main
sudo nala install conda
sudo nala install miniconda
mkdir -p ~/miniconda3\
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\
rm -rf ~/miniconda3/miniconda.sh\
~/miniconda3/bin/conda init zsh
sudo nala install pip
cd miniconda3
conda
conda env list
conda create -n test python=3.9.7
python3 --version
conda create -n test python=3.12.4
pip install time
pip3 install math
pip install math
conda install math
conda install 'math'
pip install numpy
cuda
sudo nala install cuda-toolkit
lspci | grep -i nvidia
nvim README.md
sudo nala install nvidia-cuda-toolkit
git add .config/
git add .config/nvim
git commit -m 'dd'
sudo nala install nvidia-cudnn
pip3 install torch torchvision torchaudio
cd docu
nvim Documents/demo.py
mv demo.py ~/githubrepos
docker pull ros:humble-perception
distrobox create -i ros:humble-perception --name rossim
distrobtmux-select :. 
distrobox-enter rossim
nala
rviz
gz
ros2 run rviz2 rviz2
ros2 run rviz rviz2
cd /opt
cd ros
cd humble
docker run -it --rm ros:humble-perception
docker build -t ros2sim:new .
docker run -it --rm ros2sim:new
docker build -t ros2sim .
distrobox rm -f rossim
distrobox create -i ros2sim --name rossim
sudo apt install zoxide
gh
sudo nala install gh
gh auth login
gh cs
gh auth refresh -h github.com -s codespace
gh cs create
gh cs ssh
cat .zshrc
cd is
conda list
source ~/.local/share/ov/pkg/isaac-sim-2023.1.1/setup_conda_env.sh
python3 hello_world.py
~/.local/share/ov/pkg/isaac-sim-2023.1.1/python.sh hello_world.py
python3 extension_examples/hello_world/hello_world.py
cd extension_examples/
cd base_sample
python3 extension_examples/base_sample/base_sample.py
pip install omni
sudo nala install python3-omni
./python.sh standalone_examples/api/omni.isaac.franka/pick_place.py
cd iss
cd extension_examples/hello_world
distrobox create -i ubuntu-dbox --name minecraft
du -ah . | sort -rh | head -n 20
sudo du -ah / | sort -rh | head -n 50
distrobox enter --nvidia minecraft
sudo shutdown now12
docker container commit -p minecraft minecraft
docker run -it --rm minecraft
mkdir omni
cd omni
mkdir usd
./isaac-sim.sh /home/ubuntu/omni/usd/car_tutorial.usd
distrobox enter minecraft
nix-env -p xfce.thunar
nix-shell -p xfce.thunar
distrobox create -i minecraft --nvidia  --name minecraftnew
./isaac-sim.sh 
cd docs
cd /
sftp J9t9p68Sob@ftp.minefort.com:21
ftp ftp.minefort.com:21
ftp J9t9p68Sob:ftp.minefort.com:21
ftp J9t9p68Sob@ftp.minefort.com:21
nvim Dockerfile
docker run -it --rm ros:humble-ros-base-jammy
docker run -it --rm ros2sim
distrobox-list
telnet localhost 8223
./python.sh demo.py
source setup_conda_env.sh
conda activate base
./python.sh standalone_examples/api/omni.isaac.franka/follow_target_with_rmpflow.py\

cd apps/omni.isaac.sim.python.kit
nvim standalone_examples/api/omni.isaac.jetbot
./python.sh standalone_examples/api/omni.isaac.jetbot/jetbot_move.py
./python.sh standalone_examples/api/omni.isaac.quadruped/a1_standalone.py
./python.sh extension_examples/hello_world/hello_world.py
cp extension_examples/hello_world/hello_world.py helloworldcustom.py
nvim helloworldcustom.py
cat helloworldcustom.py
cd standalone_examples
cd data
./
cd extension_examples/hello_world/
distrobox enter rossim
./python.sh standalone_examples/api/omni.isaac.ros2_bridge/moveit.py
cd exts/omni.isaac.examples/omni/isaac/examples
./python.sh helloworldcustom.py
nano helloworldcustom.py
cp helloworldcustom.py exts/omni.isaac.examples/omni/isaac/examples/user_examples/.
./python.sh exts/omni.isaac.examples/omni/isaac/examples/user_examples/helloworldcustom.py
cd exts/omni.isaac.examples/omni/isaac/examples/base_sample
cp -r hello_world  user_examples/.
cp -r hello_world/  user_examples/.
cp -r hello_world/*  user_examples/.
cp hello_world/*  user_examples/.
rm -r hello_world
rm helloworldcustom.py
cat __
cat __init__.py
cat hello_world_extension.py
cat hello_world/hello_world_extension.py
cat user_examples/hello_world_extension.py
cd ov
gcc --version
cat .config/nvim/init.lua
cp .config/nvim/init.lua githubrepos/.
rm .config/nvim/*
git clone https://github.com/NvChad/starter ~/.config/nvim 
y
rm -rf ~/.config/nvim/.git
gcc -h
chmod +x demo.c
gcc demo.c
./demo.c
chmod +x demo
rm -r .config/nvim/*
git clone https://github.com/nvim-lua/kickstart.nvim.git "${XDG_CONFIG_HOME:-$HOME/.config}"/nvim
rm -r .config/nvim
git clone https://github.com/LazyVim/starter ~/.config/nvim
nvim demo.py
nix-env -iA nixpkgs.fd nixpkgs.lazygit
cd down
rm balena-etcher_1.19.21_amd64.deb
unzip balenaEtcher-linux-x64-1.19.21.zip
cd balenaEtcher-linux-x64
chmod +x balena-etcher
./balena-etcher
cd Down
cd bal
chmod +x balenaEtcher
mate-disk-image-mounter
mate-disk-usage-analyzer
sudo QT_X11_NO_MITSHM=1 /nix/store/wpx66xb089rr4irvdq2xjbxdcwknbcxr-unetbootin-702/bin/.unetbootin-wrapped
sudo /nix/store/wpx66xb089rr4irvdq2xjbxdcwknbcxr-unetbootin-702/bin/.unetbootin-wrapped
nix-shell -p unetbootin
nix-shell -p ventoy
sudo nala install ./Downloads/imager_1.8.5_amd64.deb
rpi-imager
sudo rpi-imager
ls /dev/tty*
ls /dev/ttyA
sudo nala install screen
screen
screen /dev/ttyACM0 
ls /dev/ttyA*
screen /dev/ttyACM0 115200
dmesg | grep --color 'tty'
ls -l /dev/ttyACM0
ssh jetson@jetson
sudo nala install tigervncviewer
sudo nala install xtigervncviewer
tigervncviewer -passwd 12345 jetson@192.168.1.10
vncviewer
sudo nala install tigervnc
sudo nala install xtigervnc
sudo nala install tigervnc-viewer
xtigervncviewer -passwd 12345 jetson@192.168.1.10
xtigervncviewer -passwd 12345 jetson@192.168.1.10:5901
xtigervncviewer -passwd 12345 jetson@192.168.1.10:5900
ssh jetson@192.168.1.10
xtigervncviewer 
ssh -L 5900:localhost:5900 jetson@192.168.1.10
sudo screen /dev/ttyACM0 115200
nvidia-settings
sudo apt install software-properties-common\
sudo add-apt-repository universe
sudo apt update
sudo apt upgrade
sudo apt install ros-jazzy-desktop
sudo nala update && sudo nala install curl -y\
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
sudo nala install ros-jazzy-desktop
sudo nala list
ros2 run demo_nodes_cpp talker
ros2 run demo_nodes_py listener
ros2 node list
rviz2
gazebo
sudo nala install ros-humble-base
apt
sudo apt update && sudo apt install curl -y\
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
echo $UBUNTU_CODENAME
source /etc/os-release\
echo $UBUNTU_CODENAME # xenial\

source /etc/os-release\
echo $UBUNTU_CODENAME 
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo jammy) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
sudo nala install ros-humble-ros-base
ign
nano
vi
cd .ros
vim fastdds.xml
nano fastdds.xml
export FASTRTPS_DEFAULT_PROFILES_FILE=~/.ros/fastdds.xml
nvim .zshrc
./isaac-sim.selector.sh
mate-session-save
mate-session-properties
mate-power-manager
mate-power-preferences
nano move.py
python3 move.py
./python.sh -m pip install math
./python.sh -m pip install numpy
./python.sh -m pip install pandas
cd exts/omni.isaac.examples/omni/isaac/examples/
cd use
cat standalone_examples/api/omni.isaac.jetbot/jetbot_move.py
cd us
rm hello_world.py
cd stand
cd api
cd omni.isaac.jetbot
cat jetbot_move.py
./python.sh
nvim hello_world.py
nano exts/omni.isaac.examples/omni/isaac/examples/user_examples/hello_world.py
./python.sh exts/omni.isaac.examples/omni/isaac/examples/user_examples/hello_world.py
cd user
cd hello
cat hello_world.py
ca
ls user_examples
mv hello_world.py hello_world.py.bak
cp user_examples/hello_world.py hello_world/.
ls hello_world
rm hello_world/hello_world.py
cd hello_world
mv hello_world.py.bak hello_world.py
cat hello_world/hello_world.py
cat user_examples/hello_world.py
cp user_examples/hello_world.py .
ls --color
rm user_examples/*
cp hello_world/hello_world* user_examples/
cd user_examples
nano __init__.py
rm hello_world_extension.py
nano hello_world_extension.py
nano hello_world.py
cd githubrepos/systemsetup
ls .config
cd .config/nvim
./copy.sh
nano copy.sh
cp ~/.zshrc .
cp ~/.p10k.zsh .
lsm-a
bash
cd .fonts
nix-env -iA nixpkgs.steam
df -H
sudo nala install ca-certificates
nix-env -e steam
sudo nala install steam
cd cs
git fetch origin
git merge 
git status
cd Doc
cd
cd Documents
sudo brightnessctl s 2%-
pip3 install tensorflow-lite opencv2
pip3 install tensorflow_lite opencv2
pip3 install tensorflow opencv2
pip3 install tensorflow opencv
pip3 install tensorflow opencv-python
nano .zsh_history
cp ~/.bash_history .
cp ~/.zsh_history .
git config pull.rebase false
git pull
nix-env -iA nixpkgs.arduino-ide
nix-env -iA nixpkgs.cmatrix
cmatrix
sudo brightnessctl s 2%+
mkdir icp
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/icp.git\
git push -u origin main
nvim demo.c
demo
./demo
mv demo.c temp.c
nvim temp.c
gcc demo.c -o demo
rm demo
gcc temp.c
touch days.c
cat temp.c
cat days.c
rm a.out
nvim days.c
gcc days.c
gcc area.c
touch age.c
nano ~/.config/i3/config
IP -A
ip a
mkdir detector
git init
git remote add origin https://github.com/sim-daas/detector.git\
git push -u origin main
git add .
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/detector.git\
git push -u origin main
cp ~/githubrepos/systemsetup/push.sh .
conda create --name detenv python=3.11
pip3 install tensorflow tensorflow-lite keras torch mtcnn opencv-python torchvision torchaudio numpy pandas matplotlib 
pip cache dir
conda activate detenv
conda remove detenv
conda delete detenv
conda env remove --name detenv
cd detector
pip3 install tensorflow keras torch mtcnn opencv-python torchvision torchaudio numpy pandas matplotlib 
pip install numpy scikit-learn matplotlib\

pip3 list
pip freeze > requirements.txt\

cat requirements.txt
pip install mtcnn opencv-python tensorflow-gpu\

nvcc --version\

ls /usr/local/clear
rm demo.py
nano demo.py
nano haar.py
nano haarcascade_frontalface_deafult.xml
pip install torch torchvision opencv-python retinaface\

pip install ultralytics
nano labels.txt
rm yol.py
distrobox stop minecraftnew
steam
thunar
nix-env -iA nixpkgs.xfce-thunar
nix-env -iA nixpkgs.thunar
nix-shell -p connman
nix-shell -p connman-gtk
nix-shell -p connman-gtk connman
nix-shell -p connman-gtk connmanFull cmst enlightenment.econnman
nm-applet
nm-connection-editor
cat demo.py
mv demo.py
mv demo.py detector/.
rm init.lua
cat Dockerfile
mkdir softdev
cd sofdev
ls -a
echo "# softdev" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/softdev.git\
git push -u origin main
cp ../systemsetup/push.sh .
mkdir python
	lsl
sll
sls
du -ah / | sort -rh | head -n 20
cd cs50
ls week1
cp week1/camel.py ../softdev/python/.
cd pyth
nvim camel.py
cat camel.py
python3 camel.py
sudo nala upgrade
source /opt/ros/humble/setup.zsh
ros2
ign gazebo
cd sys
nanp
nano .bash_history
cat README.md
nvim /
ollama run phi3:mini "prepare a bash file based on my system history to help reproduce this setup on any new system: $(cat zshh)"\

ollama run phi3:mini "prepare a bash file based on my system history to help reproduce this setup on any new system: $(cat zsh)"\

ollama run phi3:mini "prepare a bash file based on my system history to help reproduce this setup on any new system: $(cat .zsh_history)"\

ollama run phi3:mini "prepare a list of installed software and editited config files based on my system history to help reproduce this setup on any new system: $(cat .zsh_history)"\

ollama run phi3:mini "prepare a list of installed software and editited config files based on my system history to help reproduce this setup on any new system: $(cat .bash_history)"\

ollama rm phi3:mini
ollama list
sudo du -ah / | sort -rh | head -n 30
sudo reboot
egrep -c '(vmx|svm)' /proc/cpuinfo
nix-shell -p qemu_full qemu_kvm qemu_utils virt-manager
nix-shell -p qemu_full qemu_kvm qemu-utils virt-manager
sudo nala install qemu-kvm qemu-system qemu-utils python3 python3-pip libvirt-clients libvirt-daemon-system bridge-utils virtinst libvirt-daemon virt-manager 
sudo virsh net-start default
sudo virsh net-autostart default
sudo virsh net-list --all
sudo usermod -aG libvirt $USER\
sudo usermod -aG libvirt-qemu $USER\
sudo usermod -aG kvm $USER\
sudo usermod -aG input $USER\
sudo usermod -aG disk $USER
sudo btop
sudo btop++
qemu
virt-manager
sudo systemctl restart libvirtd.service
intel_iommu=on
dmesg | grep -i -e DMAR -e IOMMU
nano demo.sh
./demo.sh
sh demo.sh
sudo systemctl status libvirtd.service
cat .bash_history
nix-env -e ollama
nix-env -iA nixpkgs.android-studio
sudo nala install nano
android-studio
nix-env -iA nixpkgs.spotify
								spotify
sudo du -ah / | sort -rh | head -n 20
nix-env -e android-studio
nix-env -e android
nix-env -e android-studio-stable
nix-collect-garbage 
history
rm -r .android
nix-env -q
nix-collect-garbage -d
./setup_conda_env.sh
./setup_python_env.sh
cat setup_conda_env.sh
cat setup_python_env.sh
/home/ubuntu/.local/share/ov/pkg/isaac-sim-2023.1.1/kit/python/bin/python3 -m pip list
cat python.sh
/home/ubuntu/.local/share/ov/pkg/isaac-sim-2023.1.1/kit/python/bin/python3 
./python.sh 
sudo nala rm steam
sudo nala remove steam
sudo du -ah /usr /bin | sort -rh | head -n 40
sudo du -ah /bin | sort -rh | head -n 40
sudo du -ah /etc | sort -rh | head -n 40
nmcli con add type wifi ifname wlan0 con-name Hostspot autoconnect yes ssid Hostspot\
nmcli con modify Hostspot 802-11-wireless.mode ap 802-11-wireless.band bg ipv4.method shared\
nmcli con modify Hostspot wifi-sec.key-mgmt wpa-psk\
nmcli con modify Hostspot wifi-sec.psk "gareeb"
nmcli con up Hostspot
sudo du -ah / | sort -rh | head -n 40
rm -r Android
rm -r AndroidStudioProjects
cleAR
CLEAR
sudo du -ah / | sort -rh | head -n 60
sudo arduino-ide
sudo nala install arduino-ide
sudo nala install arduino
sudo $(which arduino-ide)
cd .arduino15/packages/arduino
ls tools
sudo $(which arduino-ide) --no-sandbox
chmod +x arduino-ide
chmod +x $(which arduino-ide)
sudo chmod +x $(which arduino-ide)
ls -l /dev/tty*
sudo usermod -aG dialout $USER
echo $USER
newgrp dialout\

ls -l /dev/ttyACM*\

arduino-ide
ls -l /dev/ttyUSB0\

sLogin\
Login\
Login\
Login\
Login\
Login\
Login\
Login\
Login\
sLogin\
udoLogin\
 Login\

Login\
sid[Login\

nano yol.py
python3 haar.py
cd de
pip install pyserial
python3 serial.py
nano serial.py
nano .gitignore
cd det
python3 yol.py
caja
sudo passwd
gcc greater.c
./a.out
cd git
cd softdev
cd python
cd pyt
mkdir codew
mv camel.py codew/.
mkdir datasc
mkdir numpy
mv -r python/datasc  .
mv python/datasc  .
cd datasc/numpy
clear
nix-env -iA nixpkgs.vscode
printenv > "/tmp/tmp-11628mOyHUeV5hR7E.txt"
cd icp
rm demo.c
rm demp.py
docker run ubuntu:24.04
docker run -it --rm ubuntu:24.04
pwd
docker ps -a
ollama run dolphin-llama3:8b-
nix-env -iA nixpkgs.ollama
tmux
ollama serve
ollama run dolphin-llama3:8b
btop
distrobox enter minecraftnew
cd soft
nano README.md
cat push.sh
./push.sh
nix-channel --add https://nixos.org/channels/nixos-24.05 nixos
nix-channel --add https://nixos.org/channels/nixos-24.05 
nix-channel --add https://nixos.org/channels/nixos-24.05 nixpkgs
nix-channel --list
nix-channel --update
nix-channel --rm
nix-channel -rm 
nix-channel --remove
nix-channel --remove nixos
sudo nala remove neovim
sudo nala remove vim
which nvim
nvim --version
fzf_cd :. 
cd /nix/store
fzf 
sudo $(which nvim) --no-sandbox
sudo $(which vscode) --no-sandbox
sudo $(which code) --no-sandbox
sudo $(which code) --no-sandbox --user-data-dir /home/ubuntu/
code
nix-env -e nvim
nix-env -e neovim
tar xzvf nvim-linux64.tar.gz
./nvim-linux64/bin/nvim
tmux-select :. 
pip install jupyter
conda activate test
pip install ipykernel
pip install ipython
passwd
su root
sudo su
sudo apt
sudo apt install nano
distrobox create -i ubuntu --name mojo
distrobox create --nvidia -i ubuntu:24.4 --name mojo
distrobox create --nvidia -i ubuntu:24.04 --name mojo
curl -ssL https://magic.modular.com/d4f0dd67-05e6-477f-8a97-b81d34033d7f | bash
exec zsh
conda deactivate
magic init my-mojo-project --format mojoproject\
cd my-mojo-project\
magic add "numpy>=2.0"\

ls my-mojo-project
rm -r my-mojo-project
pip
pip list
conda install 'numpy'
magic add "numpy>=2.0"\

python3
mojo
nano demo.mojo
sudo apt install vim
distrobox enter mojo
cd my-mojo-project
magic shell
rm demo.mojo
vim demo.mojo
python3 demo.py
mojo demo.mojo
cd githubrepos
cd so
cd datasc
cd numpy
cd .
code .
cd M
cd 
cd Music
rm -r *
nix-env -iA nixpkgs.neovim
nvim 
cd num
nvim .
cat config
fastfetch --logo opensuse_tumbleweed 
nvim
sudo br
nmtui
sudo reboot now
./isaac-sim.sh
cd isa
fzf .
fzf
fc 
sudo nala install fonts-indic
fc -v
sudo shutdown now
ranger
sudo brightnessctl s 5%+
cd pico
nano picom.conf
cd ..
cd i3
nano config
cd poly
nano config.ini
sudo brightnessctl s 5%-
rocker
df -h
docker images
sudo nala install python3-rocker
rocker --nvidia --x11 --privileged --network host  --name <container name> osrf/ros:humble-desktop-full-jammy
rocker --nvidia --x11 --privileged --network host  --name ro2simtest osrf/ros:humble-desktop-full-jammy
sudo rocker --nvidia --x11 --privileged --network host  --name ro2simtest osrf/ros:humble-desktop-full-jammy
distrobox rm mojo
distrobox rm rossim
distrobox rm ros2humble
distrobox ls
rocker run --nvidia --x11 --privileged --network host  --name ro2simtest osrf/ros:humble-desktop-full-jammy
docker run --nvidia --x11 --privileged --network host  --name ro2simtest osrf/ros:humble-desktop-full-jammy
curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\
  && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\
    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
sed -i -e '/experimental/ s/^#//g' /etc/apt/sources.list.d/nvidia-container-toolkit.list
sudo sed -i -e '/experimental/ s/^#//g' /etc/apt/sources.list.d/nvidia-container-toolkit.list
sudo nala update
sudo nala install -y nvidia-container-toolkit
sudo nvidia-ctk runtime configure --runtime=docker
sudo rocker run --nvidia --x11 --privileged --network host  --name ros2sim osrf/ros:humble-desktop-full-jammy
sudo rocker --nvidia --x11 --privileged --network host  --name ros2sim osrf/ros:humble-desktop-full-jammy
nvidia-ctk runtime configure --runtime=docker --config=$HOME/.config/docker/daemon.json
sudo systemctl --user restart docker
systemctl --user restart docker
docker
sudo systemctl restart docker
sudo nvidia-ctk config --set nvidia-container-cli.no-cgroups --in-place
rocker run --nvidia --x11 --privileged --network host  --name ros2sim osrf/ros:humble-desktop-full-jammy
rocker --nvidia --x11 --privileged --network host  --name ros2sim osrf/ros:humble-desktop-full-jammy
docker --nvidia --x11 --privileged --network host  --name <container name> osrf/ros:humble-desktop-full-jammy
docker --nvidia --x11 --privileged --network host  --name ros2sim osrf/ros:humble-desktop-full-jammy
docker run --nvidia --x11 --privileged --network host  --name ros2sim osrf/ros:humble-desktop-full-jammy
sudo docker run --rm --runtime=nvidia --gpus all ubuntu nvidia-smi
docker run --rm --runtime=nvidia --gpus all ubuntu nvidia-smi
nano /etc/nvidia-container-runtime/config.toml
distrobox create -i  osrf/ros:humble-desktop-full-jammy --nvidia  --name ros2humble
distrobox enter ros2humble
cd Desktop
ls
rm untitled\ folder
rm -r untitled\ folder
git clone https://github.com/isaac-sim/IsaacSim-ros_workspaces.git
cd IsaacSim-ros_workspaces
docker cp humble_ws ros2humble:/root/humble_ws
cd /root
sudo cd /root
: 1727889504:0;distrobox enter -s ros2humble
: 1727889521:0;distrobox enter -r ros2humble
: 1727889530:0;cd /root
: 1727889535:0;sudo cd /root
: 1727889543:0;sudo -s cd /root
: 1727889547:0;pwd
: 1727889551:0;cd ..
: 1727889555:0;ls
: 1727889569:0;cd root
: 1727889574:0;sudo cd root
: 1727889584:0;sudo -s
: 1727889773:0;export FASTRTPS_DEFAULT_PROFILES_FILE=/root/humble_ws/fastdds.xml
: 1727889788:0;cd isa
: 1727889794:0;./isaac-sim.selector.sh
: 1727890062:0;source /opt/ros/humble/setup.zsh
: 1727890069:0;source /opt/ros/iron/setup.zsh
: 1727890098:0;source /opt/ros/jazzy/setup.zsh
: 1727890101:0;ros2
: 1727890365:0;ign gazebo
: 1727890422:0;source /opt/ros/jazzy/setup.zsh
: 1727890446:0;rviz2
: 1727890457:0;ros2 gazebo
: 1727890468:0;python3
: 1727890485:0;pip list
: 1727890504:0;pip install yaml
: 1727890511:0;python3
: 1727890674:0;pip install pyyaml
: 1727890677:0;python3
: 1727890696:0;conda deactivate
: 1727890697:0;python3
: 1727898879:0;sudo shutdown now
: 1727907247:0;sudo brightnessctl s 5%+
: 1727907265:0;sudo brightnessctl s 5%-
: 1727928423:0;gcc login.c
: 1727928619:0;./a.out
: 1727928671:0;gcc login.c
: 1727928672:0;./a.out
: 1727928733:0;./push.sh
: 1727929860:0;gcc bill.c
: 1727930141:0;./push.sh
: 1727930146:0;gcc bill.c
: 1727930358:0;./a.out
: 1727930540:0;gcc calc.c
: 1727930543:0;./a.out
: 1727930616:0;gcc marks.c
: 1727930619:0;./a.out
: 1727930717:0;gcc month.c
: 1727930719:0;./a.out
: 1727930766:0;./push.sh
: 1727930833:0;gcc calc.c
: 1727930836:0;./a.out
: 1727930854:0;gcc marks.c
: 1727930856:0;./a.out
: 1727930880:0;gcc month.c
: 1727930881:0;./a.out
: 1727930912:0;gcc login.c
: 1727930913:0;./a.out
: 1727930962:0;gcc bill.c
: 1727930964:0;./a.out
: 1727931450:0;cd isa
: 1727931467:0;./isaac-sim.sh
: 1727932283:0;cd isa
: 1727932292:0;./python.sh 
: 1727932335:0;cat exts/omni.isaac.examples/omni/isaac/examples/user_examples/hello_world.py
: 1727932381:0;cat standalone_examples/api/omni.isaac.jetbot/jetbot_move.py
: 1727932398:0;./python.sh 
: 1727932411:0;source /opt/ros/jazzy/setup.zsh
: 1727932414:0;conda deactivate
: 1727932417:0;source /opt/ros/jazzy/setup.zsh
: 1727932424:0;python3
: 1727932430:0;./python.sh 
: 1727932460:0;which python3
: 1727932466:0;cat ./python.sh
: 1727932684:0;./python.sh -m pip list
: 1727932743:0;cd isa
: 1727932745:0;./python.sh -m pip list
: 1727932770:0;source /opt/ros/jazzy/setup.zsh
: 1727932773:0;./python.sh -m pip list
: 1727932911:0;./python.sh 
: 1727948677:0;curl -o image.jpg https://51d9-35-221-166-146.ngrok-free.app/image
: 1727948683:0;ranger
: 1727948845:0;cd git
: 1727948847:0;ls
: 1727948861:0;cd softwproject
: 1727948871:0;mkdir softwproject
: 1727948878:0;cd softwproject
: 1727948882:0;echo "# SOFTDEV-PROJECT" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/SOFTDEV-PROJECT.git\
git push -u origin main
: 1727948889:0;nano README.md
: 1727948970:0;cp ~/githubrepos/systemsetup/push.sh .
: 1727948978:0;./push.sh
: 1727949490:0;caja
: 1727949571:0;ranger
: 1727950829:0;ranger
: 1728023344:0;cd sof
: 1728023347:0;ls
: 1728023355:0;rm grayscale_image.jpg
: 1728023358:0;rm grayscale_image.jpeg
: 1728023368:0;nano README.md
: 1728023471:0;./push.sh
: 1728067682:0;sudo brightnessctl s 5%+
: 1728069108:0;sudo shutdown now
: 1728182699:0;sudo brightnessctl s 5%-
: 1728231852:0;cd soft
: 1728231894:0;nano FRONTEND.md
: 1728232387:0;./push.sh
: 1728232449:0;ls
: 1728232466:0;mv FRONTEND.md ~/githubrepos/softwproject/.
: 1728232470:0;ls
: 1728232474:0;./push.sh
: 1728232487:0;cd pro
: 1728232492:0;./push.sh
: 1728232608:0;cd pro
: 1728232611:0;nano README.md
: 1728232761:0;./push.sh
: 1728239972:0;nmtui
: 1728312074:0;gcc demo.c
: 1728312077:0;./a.out
: 1728312088:0;gcc demo.c
: 1728312089:0;./a.out
: 1728312107:0;bash
: 1728329409:0;sudo shutdown now
: 1728365391:0;cd pro
: 1728365402:0;git pull origin main
: 1728365419:0;./push.sh
: 1728365430:0;git fetch origin
: 1728365440:0;git merge
: 1728365443:0;ls
: 1728365588:0;caja
: 1728365818:0;cd pro
: 1728365824:0;nano Dockerfile
: 1728365846:0;docker build -t my-html-server .\

: 1728365880:0;nano Dockerfile
: 1728365891:0;docker build -t my-html-server .\

: 1728365922:0;docker run -d -p 8080:80 -v $(pwd):/usr/share/nginx/html my-html-server\

: 1728366762:0;nano About\ Us/About2.css
: 1728367352:0;nano push.sh
: 1728367380:0;./push.sh
: 1728367590:0;nano index.html
: 1728367598:0;cat index.html
: 1728367957:0;nano About\ Us/About2.css
: 1728368281:0;./push.sh
: 1728379041:0;cd sys
: 1728379043:0;ls
: 1728379047:0;./copy.sh
: 1728379060:0;./push.sh
: 1728379067:0;ls -a
: 1728379075:0;cp ~/.bash_history .
: 1728379080:0;cp ~/.zsh_history .
: 1728379083:0;./push.sh
: 1728381107:0;conda activate test
: 1728381119:0;pip install facenet-pytorch
: 1728381151:0;pip list
: 1728381224:0;pip install facenet-pytorch --no-deps\

: 1728381232:0;python3
: 1728381285:0;cd git
: 1728381286:0;ls
: 1728381289:0;cd detector
: 1728381290:0;ls
: 1728381299:0;mkdir eyes
: 1728381312:0;nano saveye.py
: 1728381345:0;python3 saveye.py
: 1728381391:0;caja
: 1728381455:0;./push.sh
: 1728382302:0;nano train.py
: 1728382421:0;nano saveye.py
: 1728382442:0;rm -r eyes
: 1728382447:0;mkdir eyes
: 1728382450:0;cd eyes
: 1728382454:0;mkdir closed
: 1728382500:0;mkdir open
: 1728382504:0;cd ..
: 1728382509:0;nano saveye.py
: 1728383400:0;python3 saveye.py
: 1728383453:0;caja
: 1728383532:0;python3 saveye.py
: 1728383587:0;caja
: 1728383618:0;nano saveye.py
: 1728383634:0;python3 saveye.py
: 1728383681:0;caja
: 1728383770:0;nano .gitignore
: 1728383784:0;./push.sh
: 1728383796:0;nano train.py
: 1728383824:0;python3 train.py
: 1728383890:0;nano train.py
: 1728383904:0;python3 train.py
: 1728383914:0;nano train.py
: 1728383929:0;python3 train.py
: 1728383948:0;nano train.py
: 1728383974:0;python3 train.py
: 1728384069:0;cd det
: 1728384071:0;ls
: 1728384534:0;nano test.py
: 1728384615:0;python3 test.py
: 1728384827:0;nano detect.py
: 1728384841:0;python3 detect.py
: 1728385182:0;nano saveye.py
: 1728385223:0;python3 saveye.py
: 1728385228:0;nano saveye.py
: 1728385248:0;python3 saveye.py
: 1728385294:0;caja
: 1728385401:0;nano saveye.py
: 1728385417:0;python3 saveye.py
: 1728385517:0;qcaja
: 1728385521:0;caja
: 1728385745:0;nano saveye.py
: 1728385763:0;python3 saveye.py
: 1728385790:0;caja
: 1728385821:0;nano train.py
: 1728385843:0;mkdir models
: 1728385863:0;mv eye_classifier_resnet18.pth models/classifierv1.pth
: 1728385870:0;nano .gitignore
: 1728385881:0;./push.sh
: 1728385891:0;python3 train.py
: 1728386203:0;python3 test.py
: 1728386233:0;python3 detect.py
: 1728386493:0;caja
: 1728386589:0;mkdir eyes
: 1728386592:0;cd eyes
: 1728386595:0;mkdir closed
: 1728386599:0;mkdir open
: 1728386601:0;cd ..
: 1728386605:0;nano saveye.py
: 1728386612:0;python3 saveye.py
: 1728386666:0;nano saveye.py
: 1728386683:0;cd eye
: 1728386684:0;ls
: 1728386727:0;python3 saveye.py
: 1728386781:0;caja
: 1728387153:0;mv eye_classifier_resnet18.pth models/classifierv2.pth
: 1728387159:0;python3 train.py
: 1728387292:0;python3 test.py
: 1728387374:0;python3 detect.py
: 1728387445:0;nano saveye.py
: 1728387460:0;python3 saveye.py
: 1728387485:0;caja
: 1728387507:0;mv eye_classifier_resnet18.pth models/classifierv3.pth
: 1728387511:0;python3 train.py
: 1728387704:0;python3 detect.py
: 1728387845:0;python3 test.py
: 1728388105:0;nano open.py
: 1728388113:0;python3 open.py
: 1728388251:0;rm open.py
: 1728388253:0;nano open.py
: 1728388261:0;python3 open.py
: 1728388422:0;nano detect.py
: 1728388437:0;nano open.py
: 1728388442:0;rm open.py
: 1728388444:0;nano open.py
: 1728388468:0;python3 open.py
: 1728388598:0;rm open.py
: 1728388599:0;nano open.py
: 1728388604:0;python3 open.py
: 1728388610:0;nano open.py
: 1728388625:0;rm open.py
: 1728388626:0;nano open.py
: 1728388631:0;python3 open.py
: 1728388665:0;nano detect.py
: 1728388775:0;rm open.py
: 1728388780:0;nano open.py
: 1728388822:0;python3 open.py
: 1728388837:0;nano detect.py
: 1728388853:0;nano open.py
: 1728388870:0;python3 open.py
: 1728388875:0;nano open.py
: 1728388885:0;python3 open.py
: 1728388915:0;nano open.py
: 1728388932:0;python3 open.py
: 1728388951:0;cat open.py
: 1728389018:0;rm open.py
: 1728389021:0;nano open.py
: 1728389026:0;python3 open.py
: 1728389219:0;ls
: 1728389228:0;mv eye_classifier_resnet18.pth models/classifierv4.pth
: 1728389257:0;cp models/classifierv1.pth eye_classifier_resnet18.pth
: 1728389263:0;python3 detect.py
: 1728389331:0;cp models/classifierv2.pth eye_classifier_resnet18.pth
: 1728389332:0;python3 detect.py
: 1728398573:0;nvim .zsh_history
: 1728398674:0;cd sys
: 1728398684:0;cp ~/.zsh_history .
