nix-shell -p nixpkgs.neofetch
nano /etc/nix/nix.conf 
sudo nano /etc/nix/nix.conf 
sudo reboot
nix-shell -p git
nix-shell -p dmenu
sudo apt remove alacritty
nix-env -iA nixpkgs.alacritty nixpkgs.dmenu
dmenu
nix-env -iA nixpkgs.openssh
sudo systemctl enable openssh
sudo systemctl enable openssh-server
sudo systemctl enable ssh-server
openssh
nix-env -e dmenu alacritty openssh
nix-collect-garbage
sudo apt install openssh
sudo apt install openssh-server
sudo systemctl enable ssh
sudo systemctl start ssh
kitty
freshfetch 
nix-shell -p kitty
nix-shell -p thunar
nix-shell -p neofetch
nix-shell -p freshfetch
alacritty
thunar
nix-env -p foot
nix-shell -p foot kitty
ay
nix-shell -p alacritty
nix run --impure github:guibou/nixGL --alacritty
nix run --impure github:guibou/nixGL --program alacritty
nix run --impure github:guibou/nixGL alacritty
mate-wm
sudo apt install i3 i3status dmenu
mate-wm --replace i3
mkdir .config/i3status
cx i3status/
cd i3status/
sudo apt install nitrogen
sudo nano /usr/share/xsessions/i3.desktop
sudo apt install dex
mate-terminal
sudo apt install rofi alacritty
sudo apt install rofi alacritty dmenu

fastfetch --logo Garuda
fastfetch --logo GarudaDragon
fastfetch --logo Garuda_small
fastfetch --logo "bodhi"
fastfetch --logo "void"
fastfetch --logo "puppy"
fastfetch --logo "venom"
fastfetch --logo "venom_small"
fastfetch --logo "vnux"
fastfetch --logo "vzlinux"
fastfetch --logo "zorin"
fastfetch --logo "venom_small" | lolcat
lolcat | fastfetch --logo "venom_small" 
mkdir .config/fastfetch/
nano .config/fastfetch/config
mv .config/fastfetch/config .config/fastfetch/config.conf
fastfetch --os --uptime --packages --cpu --memory --battery --logo "venom_small"
fastfetch -os --uptime --packages --cpu --memory --battery --logo "venom_small"
fastfetch --uptime --packages --cpu --memory --battery --logo "venom_small"
fastfetch -h
fastfetch --config .config/fastfetch/config.conf 
fastfetch --generate-config 
fastfetch --gen-config 
rm .config/fastfetch/config.conf 
fastfetch --logo "venom_small" 
fastfetch --list-logos
fastfetch --logo kali 
fastfetch --logo popos
fastfetch --logo debian
nano .config/fastfetch/config.jsonc 
fastfetch --logo debian_small
fastfetch --logo parrot
fastfetch --logo arch_small
fastfetch --logo kali_small
fastfetch --logo kali
ubuntu@Aspire-i
fastfetch --logo arch
mate-disk-usage-analyzer 
nix-shell -p midori
mate-appearance-properties 
nix-shell -p tgpt xfce.thunar rofi
mate-font-viewer 
nix-env -iA nixpkgs.midori
midori
cd /usr/share/backgrounds/
[200~locale  # check for UTF-8
sudo apt update && sudo apt install locales
sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL="en_US.UTF-8"
sudo export LC_ALL="en_US.UTF-8"
echo "LC_ALL=en_US.UTF-8" | sudo tee -a /etc/environment
echo "en_US.UTF-8 UTF-8" | sudo tee -a /etc/locale.gen
echo "LANG=en_US.UTF-8" | sudo tee -a /etc/locale.conf
sudo locale-gen en_US.UTF-8
sudo apt install apt-transport-https ca-certificates curl software-properties-common
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
apt-cache policy docker-ce
nix-env -iA nixpkgs.distrobox
sudo groupadd docker
sudo usermod -aG docker $USER
sudo apt install docker-ce
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
# Add Docker's official GPG key:
# Add the repository to Apt sources:
echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
apt-key export docker | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-key.gpg
apt-key list docker
cd /etc/apt
sudo cp trusted.gpg trusted.gpg.d
lsb_release -c
sudo nano /etc/apt/sources.list.d/additional-repositories.list
sudo rm /etc/apt/sources.list.d/additional-repositories.list
sudo nano /etc/apt/sources.list.d/docker.list
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$UBUNTU_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run -it ubuntu
docker run -it ubuntu
export LOCALE_ARCHIVE="$(nix-env --installed --no-name --out-path --query glibc-locales)/lib/locale/locale-archive"
docker rm
docker rm hungry_turing practical_leakey
docker rm practical_leakey 
docker ps -a
mount --make-rshared 
sudo mount --make-rshared 
mount --help
distrobox create -i ubuntu
distrobox enter ubuntu 
newgrp docker
nix-env -e distrobox
curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sudo sh
docker images rm ubuntu
docker rmi ubuntu
docker ps
docker inspect i3wm
sudo apt install i3 
sudo apt install alacritty
vi /usr/share/xsessions/i3dbox.desktop
sudo apt install vi
nano /usr/share/xsessions/i3dbox.desktop
sudo nano /usr/share/xsessions/i3dbox.desktop
sudo cp /usr/share/xsessions/i3dbox.desktop .
distrbox rm ubuntu
distrobox rm ubuntu
distrobox rm -f ubuntu
cat /usr/share/xsessions/i3.desktop 
which bash
sudo chmod +x /usr/bin/i3dbox
sudo nano /usr/bin/i3dbox
nano i3dbox.desktop 
sudo nano i3dbox.desktop 
sudo cp i3dbox.desktop /usr/share/xsessions/.
sudo nano /usr/share/xsessions/i3dbox.desktop 
sudo apt install xterm xinit
i3
mate-session-inhibit 
mate-session-inhibit logout
sudo mate-session-inhibit logout
sudo apt install icewm
cp /usr/share/xsessions/icewm-session.desktop ~/
cat icewm-session.desktop 
sudo chmod +x /usr/bin/icewm
nano icewm-session.desktop 
sudo cp ~/icewm-session.desktop /usr/share/xsessions/icewm-session.desktop
sudo nano /usr/bin/icewm
/usr/bin/distrobox-enter -T -n i3wm -- "icewm-session"
which distrobox
sudo apt install brave
cat .config/i3/config 
nano .config/i3status/config 
cat .config/i3status/config 
cat .config/i3status/config | tgpt "make my i3statusbar darker with less colours and no icons"
nano .config/i3status/confige
mv .config/i3status/config .config/i3status/config.bak
mv .config/i3status/confige .config/i3status/config
nano .config/i3status/config.bak 
mv .config/i3status/config .config/i3status/config.rm
mv .config/i3status/config.bak .config/i3status/config
sudo apt install polybar
mkdir -p $HOME/.config/polybar/
cp /etc/polybar/config.ini .config/polybar/.
nano $HOME/.config/polybar/config.ini 
nano $HOME/.config/polybar/launch.sh
cgmod +x $HOME/.config/polybar/launch.sh
chmod +x $HOME/.config/polybar/launch.sh
./$HOME/.config/polybar/launch.sh
.$HOME/.config/polybar/launch.sh
sh $HOME/.config/polybar/launch.sh
nano .config/polybar/config.ini 
ls .config/
fastfetch
mkdir .config/alacritty
nano .config/i3status/config
mate-volume-control
sudo nano /usr/bin/icewm 
nm-applet 
pactl
nano alacritty/a
which picom.conf
where picom.conf
cd picom/
cd o3
rm -r picom/
nano config 
sudo apt install picom
cd .c
mkdir picom
cd picom
nano i3/config 
nano picom/picom.conf 
sudo apt remove picom
sudo apt install brightnessctl
nano .config/i3/config 
tgpt -i
brightnessctl 
brightnessctl  &
brightnessctl  -h
brightnessctl  s 25%
sudo brightnessctl  s 25%
sudo brightnessctl  s 40%
nano .config/i3/config
brightnessctl s 5%-
sudo apt install fastfetch
fastfetch --logo opensuse_tumbleweed -
cd .config/polybar/
nano config.ini 
cd .config/
nano i3/config
nano polybar/config.ini 
sudo apt install tmux
sudo apt install nani
sudo apt install nala
nix-env -e fastfetch
nala install fastfetch
sudo nala install lf
lf
sudo nala remove lf
nano alacritty/alacritty.toml 
sudo apt install nala 
sudo nala install polybar rofi nitrogen
docker container commit -p i3wm ubuntu-dbox
nano /usr/share/xsessions/i3dbox.desktop 
cd .config/tmux
mkdir .config/tmux
nano .config/tmux/tmux.conf
cat .config/alacritty/alacritty.toml 
tmux-select 
unset tmux
nala install fzf
find
rg
sudo nala install rg
sudo rg --files --hidden --glob '!*' | fzf
sudo find / \( -type f -name ".*" \) -o \( -type f ! -name ".*" \) | fzf
find . -type f -name ".*" -o -type f | fzf
find . -type d | fzf
unset tmux force
top
sudo nala install htop
htop
pwd
rnager
ranger 
nix-env -e ranger
cat /tmp/Alacritty-47661.log 
ollama run phi2
ollama-serve
nix-shell -p ollama
df -h
sudo nala install picom
sudo nala install libconfig-dev libdbus-1-dev libegl-dev libev-dev libgl-dev libepoxy-dev libpcre2-dev libpixman-1-dev libx11-xcb-dev libxcb1-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev meson ninja-build uthash-dev
nano picom.conf 
picom
nano alacritty.toml 
nix-env -p ranger
nix-shell -p ranger
nix-prefetch-url 
nano shell.nix
nix-shell
sudo dpkg-reconfigure locales
echo tmux
echo $TMUX
nano .bashrc 
unset TMUX
distrobox list
distrobox rm i3wm
distrobox create -i ubuntu:24.04 --name i3wm 
rm clear 
nano tmux.conf 
which $zsh
zsh
sudo apt install zsh
which zsh
which $SHELL
chsh
ls --colors
tmux-select
fxf
fzf /home -d
cat .bashrc
find /home /home/ubuntu /usr/bin /usr/share /usr/local/bin -type d | fzf
find /home /home/ubuntu -type d | fzf
fzf --zsh
fzf -zsh
sudo nala remove fzf
fzf
sudo nala install fzf
sudo nala install zoxide
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
z Pictures
z
cd Pictures
nano .p10k.zsh
cd picrure 
cd pictre
cd piture
nan
tmux select-pane -t :. 
tmux la
tmux lw
tmux ls
nano .bashrc
tmux kill-server
nix-shell -p tgpt
nix-env -e midori glibc-locales
nix-c
ccd
nano picom.conf
sudo nala remove ranger
nix-env -iA nixpkgs.fzf nixpkgs.ranger
sudo nala install tightvnc-standalone-server
sudo nala install tigervnc-standalone-server
mkdir .vnc
vncserver
xtigervncviewer -SecurityTypes VncAuth -passwd /tmp/tigervnc.xMoiCW/passwd :1
chmod +x .vnc/xstartup
nano .vnc/xstartup
vncserver :1 -geometry 1920x1080\

xtigervncviewer -SecurityTypes VncAuth -passwd /tmp/tigervnc.An5bMZ/passwd :1
sudo nala remove tigervnc-viewer
vncserver :1 -geometry 800x600
sudo nala install ranger
sudo nala install fastfetch
nix-shell -p fastfetch lolcat
vncserver :1 -geometry 800x570 &
nix-shell -p fastfetch
nix-shell -p fastfetch --run fastfetch --logo opensuse_tumbleweed
nix-shell -p fastfetch --run 'fastfetch --logo opensuse_tumbleweed'
cd Pictures/Wallpapers
cd picture
cd pictur wallp
cd walp
cd wall
cd pictr
cd .config/i3/
nano confifzf_cd :. 
sudo nala install brave
nix-env -p brave
nix-shell -p brave
nix-shell -p fastfetch 
cd .config/alacritty
xprop
vncserver -kill :1
cd ala
nano alacritty.toml
cd .config/caja/scripts
cd wal
cdfzf_cd :. 
cd them
nano config
neofetch
sudo nala remove neofetch 
curl https://zed.dev/install.sh 
distrobox enter i3wm
cd pic
curl https://zed.dev/install.sh | sh
~/.local/bin/zed .
cd .local/bin/zed
cd .local/bin/
rm zed
~/.local/bin/zed
docker container commit -p i3wm ubuntu-minimal
sudo nala install nvim
sudo nala install neovim
git clone -b v2.0 https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 
sudo nala install cc
sudo nala install clang
sudo nala install gcc
sudo nala install npm
sudo nala install rigrep
sudo nala install ripgrep
sudo nala install python3.12-venv
cd Documents
rm demo.py.swp
distrobox stop i3wm 
sudo nala remove npm
sudo nala install make
sudo nala install pip3
nvim .config/nvim/init.lua
nix-env -iA  nixpkgs.tgpt
cat .zsh_history | tgpt -i
cat .zsh_history | tgpt -h 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
cat .zsh_history | tgpt --max_length 10000 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
cat .zsh_history | tgpt --provider opengpts 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
cat .zsh_history | tgpt 'prepare a bashrc to setup my system and remove all the editing using nano and dupicate commands and structure it nicely'
ollama
nix-env -iA  nixpkgs.ollama
sudo nvidia-settings
ollama serve
ollama ls
ollama run phi3:mini
cat .zsh_history | ollama run phi3:mini 
ollama run phi3:mini '$(cat .zsh_history)'
ollama run phi3:mini 'prepare a bashrc based upon this history file of my setup and remove any nano edit commands and the duplicate ones , so that i can rebuild my system anywhere - $(cat .zsh_history)'
ollama run phi3:mini 'prepare a zsh script based upon this history file of my setup and remove any nano edit commands and the duplicate ones , so that i can rebuild my system anywhere - $(cat .zsh_history)'
ollama run phi3:mini 'write a zsh script based upon this history file of my setup and remove any nano edit commands and the duplicate ones , so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'write a zsh script , so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'give me a list of zsh commands so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'give me a list of installed packages using the different package managers so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat .zsh_history)'
ollama run phi3:mini 'give me a list of installed packages using the different package managers so that i can rebuild my system anywhere by running the zsh script that installs all the neccessary packages and find the neccessary packages from my history file - $(cat ~/.zsh_history)'
ollama run phi3:mini "Summarize this file: $(cat .zsh_history)"\

ollama run phi3:mini "prepare a zshrc file based on my system history to help reproduce this setup on any new system: $(cat .zsh_history)"\

cp .zsh_history zshh
sudo nala install vim
vim zshh
ollama run phi3:mini "prepare a zshrc file based on my system history to help reproduce this setup on any new system: $(cat zshh)"\

ollama run phi3:mini "prepare a bash file based on my system history to help reproduce this setup on any new system: $(cat zshh)"\

rm zshh
vim .zsh_history 
cat .zsh_history 
nano .bash_history
sudo nala install i3 polybar nitrogen rofi alacritty picom nvim tmux fzf ranger zoxide zsh git python3.12-venv make gcc\

sudo nala install i3 polybar nitrogen rofi alacritty picom neovim tmux fzf ranger zoxide zsh git python3.12-venv make gcc\

nano .zshrc
distrobox rm -f i3wm
distrobox create -i ubuntu-dbox --name i3wm 
sudo nala install i3 polybar nitrogen rofi alacritty picom neovim tmux fzf ranger zoxide git python3.12-venv make gcc\

sudo sh <(curl -L https://nixos.org/nix/install) --daemon
distrobox enter i3wm 
distrobox create -i ubuntu-dbox --name nixi3
nvim /usr/bin/i3dbox 
nano /usr/bin/i3dbox 
sudo nano /usr/bin/i3dbox 
cp /usr/bin/i3dbox /usr/bin/nixi3
sudo cp /usr/bin/i3dbox /usr/bin/nixi3
sudo nano /usr/bin/nixi3
sudo cp /usr/share/xsessions/i3dbox.desktop /usr/share/xsessions/i3nix.desktop
cat /usr/share/xsessions/
ls /usr/share/xsessions/
sudo mv /usr/share/xsessions/i3nix.desktop /usr/share/xsessions/nixi3.desktop
sudo nano /usr/share/xsessions/i3nix.desktop
sudo nano /usr/share/xsessions/nixi3.desktop
distrobox-enter nixi
distrobox-enter nixi3
nix-env -iA  nixpkgs.fastfetch
tmux-select-session :. 
cd xsess
cd pico
sudo nala remove fzf ranger
nix-env -iA  nixpkgs.ranger
nix-env -iA  nixpkgs.nvim
nvim shell.nix
cat config
cd poly
cd .config/polybar
cat config.ini
cat launch.sh
vncserver :1 -geometry 800x570
nix-daemon
distrobox create -i ubuntu-dbox --name isaac-sim
distrobox-enter isaac-sim
distrobox-enter i3wm
sudo nala install i3 polybar nitrogen rofi alacritty picom neovim tmux fzf ranger zoxide git python3.12-venv firefox
firefox
sh <(curl -L https://nixos.org/nix/install) --daemon
nix-env -iA  nixpkgs.xfce.thunar
nix-env -iA  nixpkgs.nvtop
chmod 4755 /nix/store/xvwazg6vr8h5gyp7qny1ab7w1vbfl23p-brave-1.67.134/opt/brave.com/brave/chrome-sandbox
sudo chmod 4755 /nix/store/xvwazg6vr8h5gyp7qny1ab7w1vbfl23p-brave-1.67.134/opt/brave.com/brave/chrome-sandbox
brave
chmod +x Desktop/omniverse-launcher-linux.AppImage
cd Desktop
nix-env -iA  nixpkgs.fuse
sudo nala install libfuse2
sudo nala install fuse
nix-env -e  nixpkgs.fuse
nix-env -e  fuse
sudo nala install libnss3
chmod 4755 /tmp/.mount_omniveSIgB8l/chrome-sandbox
chmod 4755 /tmp/.mount_omniveSIgB8l
chmod 4755 omniverse-launcher-linux.AppImage
chmod 4755 /tmp
sudo chmod 4755 /tmp
sudo chmod +rwx /tmp
sudo ./omniverse-launcher-linux.AppImage
chmod 775 /tmp
sudo chmod 775 /tmp
./omniverse-launcher-linux.AppImage
./omniverse-launcher-linux.AppImage -h
ls /tmp
./omniverse-launcher-linux.AppImage --allow-root
nix
distrobox-rm nixi3 i3wm isaac-sim
nix-env -iA  nixpkgs.brave
cd desk
./omniverse-launcher-linux.AppImage --appimage-extract
cd squashfs-root
chmod +x AppRun
./Apprun
Apprun
sudo mv squashfs-root /opt/omniverse-launcher
nix-env -iA  nixpkgs.neovim
sudo mv /opt/omniverse-launcher/omniverse-launcher.desktop /usr/share/applications/.
nvim /usr/share/applications/omniverse-launcher.desktop
ls /opt/omniverse-launcher
cat /opt/omniverse-launcher/omniverse-launcher.desktop
cat /usr/share/applications/omniverse-launcher.desktop
/opt/omniverse-launcher/AppRun --no-sandbox %U
cat /opt/omniverse-launcher/AppRun
nvim /opt/omniverse-launcher/AppRun
sudo nala install gnome-terminal
gnome
gnome-calculator
sudo swapon --show
sudo fallocate -l 8G /swapfile
nix-env -iA  nixpkgs.btop
nix-env -iA  nixpkgs.nvtopPackages.panthor
nvidia-smi
sudo update-alternatives --config alacritty
sudo update-alternatives --config x-terminal-emulator
timeshift
mkdir .config/nixpkgs/
nvim ~/.config/nixpkgs/config.nix
nix-env -iA  nixpkgs.obsidian
nix-env -e  nixpkgs.nvtopPackages.panthor
nix-env -e  nixpkgs.nvtopPackages.nvidia
nix-env -iA  nixpkgs.nvtopPackages.nvidia
obsidian
chmod 4755 /nix/store/6y4i5bb33xqlk7lpwjjydk7b0dmilxca-electron-30.1.1/libexec/electron/chrome-sandbox 
sudo chmod 4755 /nix/store/6y4i5bb33xqlk7lpwjjydk7b0dmilxca-electron-30.1.1/libexec/electron/chrome-sandbox 
nvtop
history
nix-env -iA  nixpkgs.polybar
nix-env -e  nvtop
which polybar
nix profile
nix profile install nixpkgs#tmux
which tmux
nix profile remove nixpkgs#tmux
nix profile remove tmux
cat /home/ubuntu/.local/state/nix/profiles/profile
nvim .config/nix/nix.conf
sudo systemctl restart nix-daemon.service
sudo systemctl restart nix-daemon.socket
which picom
nix-env -iA  nixpkgs.picom
nix-env -iA  nixpkgs.fzf
nix-env --switch-generation
nix-env --help
nix-env --l
nix profile list
mv /home/ubuntu/.local/state/nix/profiles/profile Downloads
rm Downloads/*
nix-env --rollback
nix-env -iA  nixpkgs.fzf nixpkgs.brave nixpkgs.ranger nixpkgs.obsidian 
nix-env -iA  nixpkgs.btop nixpkgs.neovim nixpkgs.fastfetch nixpkgs.tgpt nixpkgs.distrobox
tmux-select :. 
nix-collect-garbage -d
nix-env -iA  nixpkgs.docker_27
which docker
locale
nix-shell -p btop
nix-shell -p glibcLocales
nix-env --list-generations
nix-env -iA  nixpkgs.i3 nixpkgs.tmux nixpkgs.picom nixpkgs.polybar nixpkgs.nitrogen nixpkgs.rofi nixpkgs.git nixpkgs.zoxide nixpkgs.ripgrep nixpkgs.gnome.gnome-terminal
rofi
gnome-terminal
alacritty 
nix-env -e rofi gnome-terminal
which zed
ls /usr/sbin
rm /usr/sbin/zed
sudo rm /usr/sbin/zed
nvim .zsh_history
mkdir githubrepos
cd repo
git
rm systemsetup
rm -r systemsetup
git config --global credential.helper local
mkdir systemsetup
cd systemsetup
echo "# systemsetup" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/systemsetup.git\

git config --global user.email "aitechmanml@gmail.com"
git config --global init.defaultBranch main
rm README.md
git push origin main
echo "# systemsetup" >> README.md\
git init\
git add README.md\
git commit -m "first commit"\
git branch -M main\
git remote add origin https://github.com/sim-daas/systemsetup.git\
git push -u origin main
chmod +x push.sh
git config --global credential.helper store\

nvim push.sh
nix-env -e git
sudo nala install git
cd system
cd .git-credentials
tmux
cd syst
nix-env -e distrobox docker
docker run -it --rm brandoncc/vim-be-good:stable
cat .git-credentials
cp .git-credentials .gitpass
du -s githubrepos/systemsetup
du -s .config
du -sh .config
du -ah .config | sort -rh \

du -ah .config | sort -rh | head -n 20
mkdir .config
mkdir .config/i3
ln -s ~/.config/i3 githubrepos/systemsetup/.config/i3
ln -s ~/.config/i3 ~/githubrepos/systemsetup/.config/i3
ls .config/i3
cd .config/i3
cat i3
cd i3
rm -r i3
ln -s ~/.config/i3 ~/githubrepos/systemsetup/.config/
ls i3
nvim .config/i3/config
git add ~/.config/i3
git add .config/i3
touch .gitignore
ls -l ~/.config/i3\

rm .config/i3
chmod +x copy.sh
rm -r .config/omniverse-launcher
cd .config
du -ah .config | sort -rh | head -n 50
du -ah . | sort -rh | head -n 50
nvim copy.sh
rm -r .config/obsidian
nix-env -e polybar
nvim config.jsonc
ls .config/fastfetch
nvim .config/fastfetch/config.jsonc
mv config.jsonc githubrepos
rm githubrepos/config.jsonc
clear
fastfetch --logo opensuse_tumbleweed 
mkdir cs50
git init
touch requirements.txt
git add .
git branch -m main
git remote add origin https://github.com/sim-daas/cs50.git\
git push -u origin main
nix-env -q
sudo nala install conda
sudo nala install miniconda
btop
mkdir -p ~/miniconda3\
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\
rm -rf ~/miniconda3/miniconda.sh\
~/miniconda3/bin/conda init zsh
sudo nala install pip
cd miniconda3
conda
conda env list
conda create -n test python=3.9.7
python3 --version
conda create -n test python=3.12.4
pip install time
pip3 install math
pip install math
conda install math
conda install 'math'
conda install 'numpy'
pip install numpy
cuda
sudo nala install cuda-toolkit
lspci | grep -i nvidia
nvim README.md
sudo nala install nvidia-cuda-toolkit
git add .config/
git add .config/nvim
git commit -m 'dd'
sudo nala install nvidia-cudnn
pip3 install torch torchvision torchaudio
nvcc --version\

cd docu
nvim Documents/demo.py
mv demo.py ~/githubrepos
docker pull ros:humble-perception
distrobox create -i ros:humble-perception --name rossim
distrobtmux-select :. 
distrobox-enter rossim
nala
pip
rviz
gz
ros2 run rviz2 rviz2
ros2 run rviz rviz2
cd /opt
cd ros
cd humble
docker run -it --rm ros:humble-perception
docker build -t ros2sim:new .
docker run -it --rm ros2sim:new
docker build -t ros2sim .
distrobox rm -f rossim
distrobox create -i ros2sim --name rossim
sudo apt install zoxide
docker
gh
sudo nala install gh
gh auth login
gh cs
gh auth refresh -h github.com -s codespace
gh cs create
gh cs ssh
cat .zshrc
cd is
conda list
source ~/.local/share/ov/pkg/isaac-sim-2023.1.1/setup_conda_env.sh
python3 hello_world.py
~/.local/share/ov/pkg/isaac-sim-2023.1.1/python.sh hello_world.py
python3 extension_examples/hello_world/hello_world.py
cd extension_examples/
cd base_sample
python3 extension_examples/base_sample/base_sample.py
pip list
pip install omni
sudo nala install python3-omni
./python.sh standalone_examples/api/omni.isaac.franka/pick_place.py
cd iss
cd extension_examples/hello_world
distrobox create -i ubuntu-dbox --name minecraft
du -ah . | sort -rh | head -n 20
sudo du -ah / | sort -rh | head -n 50
distrobox enter --nvidia minecraft
sudo shutdown now12
docker container commit -p minecraft minecraft
docker run -it --rm minecraft
mkdir omni
cd omni
mkdir usd
./isaac-sim.sh /home/ubuntu/omni/usd/car_tutorial.usd
distrobox enter minecraft
nix-env -p xfce.thunar
nix-shell -p xfce.thunar
distrobox create -i minecraft --nvidia  --name minecraftnew
sudo reboot now
./isaac-sim.sh 
cd docs
cat README.md
cd /
sftp J9t9p68Sob@ftp.minefort.com:21
ftp ftp.minefort.com:21
ftp J9t9p68Sob:ftp.minefort.com:21
ftp J9t9p68Sob@ftp.minefort.com:21
docker images
nvim Dockerfile
docker run -it --rm ros:humble-ros-base-jammy
docker run -it --rm ros2sim
distrobox-list
telnet localhost 8223
nano demo.py
./python.sh demo.py
source setup_conda_env.sh
conda activate base
./python.sh standalone_examples/api/omni.isaac.franka/follow_target_with_rmpflow.py\

cd apps/omni.isaac.sim.python.kit
nvim standalone_examples/api/omni.isaac.jetbot
./python.sh standalone_examples/api/omni.isaac.jetbot/jetbot_move.py
./python.sh standalone_examples/api/omni.isaac.quadruped/a1_standalone.py
./python.sh extension_examples/hello_world/hello_world.py
cp extension_examples/hello_world/hello_world.py helloworldcustom.py
nvim helloworldcustom.py
cat helloworldcustom.py
cd standalone_examples
cd data
./
cd extension_examples/hello_world/
distrobox enter rossim
./python.sh standalone_examples/api/omni.isaac.ros2_bridge/moveit.py
cd exts/omni.isaac.examples/omni/isaac/examples
./python.sh helloworldcustom.py
nano helloworldcustom.py
cp helloworldcustom.py exts/omni.isaac.examples/omni/isaac/examples/user_examples/.
./python.sh exts/omni.isaac.examples/omni/isaac/examples/user_examples/helloworldcustom.py
cd exts/omni.isaac.examples/omni/isaac/examples/base_sample
cp -r hello_world  user_examples/.
cp -r hello_world/  user_examples/.
cp -r hello_world/*  user_examples/.
cp hello_world/*  user_examples/.
rm -r hello_world
rm helloworldcustom.py
cat __
cat __init__.py
cat hello_world_extension.py
cat hello_world/hello_world_extension.py
cat user_examples/hello_world_extension.py
cd ov
gcc --version
cat .config/nvim/init.lua
cp .config/nvim/init.lua githubrepos/.
rm .config/nvim/*
git clone https://github.com/NvChad/starter ~/.config/nvim 
y
rm -rf ~/.config/nvim/.git
gcc -h
chmod +x demo.c
gcc demo.c
./demo.c
gcc demo.c -o demo
chmod +x demo
demo
./demo
rm -r .config/nvim/*
git clone https://github.com/nvim-lua/kickstart.nvim.git "${XDG_CONFIG_HOME:-$HOME/.config}"/nvim
nvim demo.c
rm -r .config/nvim
git clone https://github.com/LazyVim/starter ~/.config/nvim
nvim demo.py
nix-env -iA nixpkgs.fd nixpkgs.lazygit
fzf_cd :. 
cd down
rm balena-etcher_1.19.21_amd64.deb
du -ah / | sort -rh | head -n 20
sudo du -ah / | sort -rh | head -n 20
unzip balenaEtcher-linux-x64-1.19.21.zip
cd balenaEtcher-linux-x64
chmod +x balena-etcher
./balena-etcher
cd Down
cd bal
chmod +x balenaEtcher
mate-disk-image-mounter
mate-disk-usage-analyzer
sudo QT_X11_NO_MITSHM=1 /nix/store/wpx66xb089rr4irvdq2xjbxdcwknbcxr-unetbootin-702/bin/.unetbootin-wrapped
sudo /nix/store/wpx66xb089rr4irvdq2xjbxdcwknbcxr-unetbootin-702/bin/.unetbootin-wrapped
nix-shell -p unetbootin
nix-shell -p ventoy
sudo nala install ./Downloads/imager_1.8.5_amd64.deb
rpi-imager
sudo rpi-imager
ls /dev/tty*
ls /dev/ttyA
sudo nala install screen
screen
screen /dev/ttyACM0 
ls /dev/ttyA*
screen /dev/ttyACM0 115200
dmesg | grep --color 'tty'
ls -l /dev/ttyACM0
ssh jetson@jetson
sudo nala install tigervncviewer
sudo nala install xtigervncviewer
tigervncviewer -passwd 12345 jetson@192.168.1.10
vncviewer
sudo nala install tigervnc
sudo nala install xtigervnc
sudo nala install tigervnc-viewer
xtigervncviewer -passwd 12345 jetson@192.168.1.10
xtigervncviewer -passwd 12345 jetson@192.168.1.10:5901
xtigervncviewer -passwd 12345 jetson@192.168.1.10:5900
ssh jetson@192.168.1.10
xtigervncviewer 
ssh -L 5900:localhost:5900 jetson@192.168.1.10
sudo screen /dev/ttyACM0 115200
nvidia-settings
sudo apt install software-properties-common\
sudo add-apt-repository universe
sudo apt update
sudo apt upgrade
sudo apt install ros-jazzy-desktop
sudo nala update && sudo nala install curl -y\
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
sudo nala install ros-jazzy-desktop
sudo nala list
nvim 
pip3 list
nvim
conda activate test
python3 demo.py
ros2 run demo_nodes_cpp talker
ros2 run demo_nodes_py listener
ros2 node list
rviz2
gazebo
sudo nala install ros-humble-base
apt
sudo apt update && sudo apt install curl -y\
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
echo $UBUNTU_CODENAME
source /etc/os-release\
echo $UBUNTU_CODENAME # xenial\

source /etc/os-release\
echo $UBUNTU_CODENAME 
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo jammy) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
sudo nala update
sudo nala upgrade
sudo nala install ros-humble-ros-base
distrobox create -i  osrf/ros:humble-desktop-full-jammy --nvidia  --name ros2humble
ign
ign gazebo
distrobox enter ros2humble
nano
vi
sudo apt install vim
cd .ros
vim fastdds.xml
sudo apt install nano
nano fastdds.xml
export FASTRTPS_DEFAULT_PROFILES_FILE=~/.ros/fastdds.xml
nvim .zshrc
exec zsh
./isaac-sim.selector.sh
source /opt/ros/humble/setup.zsh
ros2
mate-session-save
mate-session-properties
mate-power-manager
mate-power-preferences
caja
nano move.py
python3 move.py
./python.sh -m pip install math
./python.sh -m pip install numpy
./python.sh -m pip install pandas
conda deactivate
./setup_conda_env.sh
python3
ranger
cd exts/omni.isaac.examples/omni/isaac/examples/
cd use
cat standalone_examples/api/omni.isaac.jetbot/jetbot_move.py
cd us
rm hello_world.py
cd stand
cd api
cd omni.isaac.jetbot
cat jetbot_move.py
./python.sh
nvim hello_world.py
nano exts/omni.isaac.examples/omni/isaac/examples/user_examples/hello_world.py
./python.sh exts/omni.isaac.examples/omni/isaac/examples/user_examples/hello_world.py
cd user
cd hello
cat hello_world.py
cd isa
ca
ls user_examples
mv hello_world.py hello_world.py.bak
cp user_examples/hello_world.py hello_world/.
ls hello_world
rm hello_world/hello_world.py
cd hello_world
mv hello_world.py.bak hello_world.py
cd ..
cat hello_world/hello_world.py
cat user_examples/hello_world.py
cp user_examples/hello_world.py .
ls --color
rm user_examples/*
cp hello_world/hello_world* user_examples/
cd user_examples
nano __init__.py
rm hello_world_extension.py
nano hello_world_extension.py
nano hello_world.py
./isaac-sim.sh
cd githubrepos/systemsetup
cd git
ls .config
cd .config/nvim
./copy.sh
nvim .
nano copy.sh
cp ~/.zshrc .
cp ~/.p10k.zsh .
cd
lsm-a
ls -a
cd sys
./push.sh
bash
cd .fonts
nvim --version
sudo brightnessctl s 5%+
nix-env -iA nixpkgs.steam
df -H
sudo nala install ca-certificates
sudo su
nix-env -e steam
nix-collect-garbage 
sudo nala install steam
steam
sudo brightnessctl s 5%-
sudo brightnessctl s 2%+
distrobox enter minecraftnew
cd cs
cd 
cd cs50
git fetch origin
git merge 
ls
git status
sudo shutdown now
sudo brightnessctl s 2%-
ip a
: 1723740598:0;cd Doc
: 1723740601:0;cd
: 1723740608:0;cd Documents
: 1723740610:0;ls
: 1723742423:0;sudo shutdown now
: 1723823365:0;sudo reboot
: 1725973965:0;fastfetch --logo opensuse_tumbleweed 
: 1725974365:0;sudo reboot
: 1725975660:0;cd isa
: 1725975664:0;./isaac-sim.sh
: 1725975743:0;distrobox enter minecraftnew
: 1725990291:0;sudo brightnessctl s 2%-
: 1725990299:0;sudo brightnessctl s 2%+
: 1725990636:0;nvim .
: 1725990735:0;clear
: 1725990775:0;conda activate test
: 1725990778:0;pip3 list
: 1725990989:0;pip3 install tensorflow-lite opencv2
: 1725990996:0;pip3 install tensorflow_lite opencv2
: 1725991005:0;pip3 install tensorflow opencv2
: 1725991010:0;pip3 install tensorflow opencv
: 1725991016:0;pip3 install tensorflow opencv-python
: 1725991039:0;clear
: 1725995439:0;sudo shutdown now
: 1726025511:0;du -ah / | sort -rh | head -n 20
: 1726025524:0;sudo du -ah / | sort -rh | head -n 20
: 1726025816:0;df -h
: 1726037320:0;cd sys
: 1726037321:0;ls
: 1726037324:0;ls -a
: 1726037332:0;history
: 1726037343:0;nano .zsh_history
: 1726037392:0;nano .bash_history
: 1726037422:0;cp ~/.bash_history .
: 1726037429:0;cp ~/.zsh_history .
